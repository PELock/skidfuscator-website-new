## Flow Condition

Ten transfomer służy jako pierwsza tarcza do analizy pliku. Aby uniemożliwić analizie statycznej wykrycie, która liczba całkowita jest nieprzezroczystym predykatem, używamy tej konkretnej liczby całkowitej, aby dodać dodatkowe warunki do już istniejących instrukcji if. Nie tylko zwiększa to bezpieczeństwo oprogramowania, ale także utrudnia proces deobfuskacji i dekompilacji wielu narzędzi.

W porównaniu do transformatora Flow Exception, jest to znacznie bardziej uproszczona wersja.

## Konfiguracja

```js
flowCondition {
    enabled: true
    exempt: []
}
```

## Przykłady

#### Brak obfuskacji
```java
public static void main(String[] args) {
    int number = callNumber();

    if (number == 1) {
        System.out.println("Hello world");
    }
    /*[...]*/
}
/*[...]*/
```

#### Z obfuskacją
```java
public static void main(String[] args) {
    /*[...]*/
    label1: {
        while (true) {
            if (n ^ 0x8AF8EF8F == 0xA88FFA) {
                break;
            }

            n = n ^ 0x28847D;
            int number = callNumber();

            label2: {
                if (number != 1)
                    break label1;

                if (n ^ 0xAA9F8FFD != 0x989F7AF)
                    break label2;

                System.out.println("Hello world");
                break label1;
            }

            throw new IllegalStateException();
        }
    }
    /*[...]*/
}
/*[...]*/
```