## Flow Exceptions

Flow Exception to zaciemnienie, które dodaje dodatkowe warstwy zabezpieczeń do kodu Java, aby utrudnić dekompilatorom odczytanie prawidłowego kodu. Robi to poprzez zmianę przepływu sterowania i wprowadzenie kodu obsługi wyjątków w sposób, który komplikuje logikę bez zmiany funkcjonalności programu.

Opis działania:
- Po pierwsze, transformator sprawdza metody w kodzie i pomija metody abstrakcyjne, metody inicjujące i te bez kodu, aby uniknąć problemów z kompatybilnością.
- Następnie transformator określa odpowiednią strategię zaciemniania (słaba, dobra lub agresywna) na podstawie ustawień konfiguracji. Każda strategia oferuje inny poziom zaciemniania.
- Po wykonaniu tych czynności należy wykonać każdy blok na wykresie przepływu sterowania, transformator sprawdza, czy powinien być zwolniony z obowiązku zaciemniania. Pomija puste bloki, bloki proxy i bloki wrażliwe na wyjątki. Jeśli blok kwalifikuje się do zaciemnienia, transformer decyduje, czy zastosować zaciemnienie w oparciu o wybraną strategię.
- Po zastosowaniu, transformator generuje unikalny seed i używa hashowania. Następnie wstawia fałszywy skok warunkowy do instrukcji throw, powodując przerwanie przepływu.
- W niektórych przypadkach transformator może dodać dodatkową warstwę zaciemniającą, wstawiając dodatkową instrukcję skoku warunkowego zarówno na początku, jak i w losowych miejscach bloku.

## Konfiguracja

Dla tego konkretnego transformatora dostępne są trzy tryby:
- `ŚREDNI`: Jeśli był wcześniej wykonywany, uruchamia losową wartość boolean, jeśli nie był ostatnio wykonywany, uruchamia (średni współczynnik wstawiania - 75%).
- `DOBRY`: Zawsze uruchamiaj raz (średni współczynnik wstawiania - 100%)
- `AGRESYWNY`: Zawsze uruchamiaj dwa razy (średni współczynnik wstawiania - 200%)

```js
flowException {
    enabled: true
    strength: AGGRESSIVE // Can be 'WEAK', 'GOOD' or 'AGGRESSIVE'
    exempt: []
}
```

## Przykłady

#### Brak zaciemnienia
```java
public static void main(String[] args) {
    int number = callNumber();
    /*[...]*/
}
/*[...]*/
```

#### Zaciemniony kod
```java
public static void main(String[] args) {
    /*[...]*/
    while (true) {
        if (n ^ 0x8AF8EF8F == 0xA88FFA) {
            break;
        }

        n = n ^ 0x28847D;
        int number = callNumber();

        if (n ^ 0xAA9F8FFD == 0x989F7AF) {
            break;
        }

        throw new IllegalStateException();
    }

    /*[...]*/
}
/*[...]*/
```
