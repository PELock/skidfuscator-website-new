
## Intervallo Di Flusso
Un passaggio di offuscamento della gamma di eccezioni di flusso è una tecnica utilizzata nell'ottimizzazione del compilatore per aggiungere offuscazione al codice di gestione delle eccezioni di un programma.

L'idea alla base di questa tecnica è quella di modificare le routine di gestione delle eccezioni del programma (come i blocchi di try-cattura) per includere ulteriori istruzioni di controllo che rendono più difficile capire il flusso logico del programma.

Ad esempio, un semplice blocco di try-catch potrebbe essere trasformato in una struttura più complessa che include blocchi di try-catch annidati o istruzioni aggiuntive di ramificazione. Questo può rendere più difficile per un osservatore capire il comportamento di gestione delle eccezioni del programma e potenzialmente scoprire vulnerabilità che potrebbero essere sfruttate.

Questa tecnica è spesso utilizzata in combinazione con altre tecniche di offuscamento per fornire ulteriori strati di protezione. Tuttavia, va notato che l'aggiunta di complessità inutile per il codice di gestione delle eccezioni può anche rendere più difficile il debug e mantenere il programma, quindi dovrebbe essere usato in modo giudizioso.

## Configurazione

```js
flowRange {
     enabled: true
     exempt: []
}
```

## Esempi

#### Unofuscato
```java
finale String uwu = "UwU";
System.out.println(uwu);
```

#### Offuscato
```java
final String uwu = "UwU";

while (true) {
     label1: {
          try {
               if (this.a(0x92A8B44, n) >> 8 != 0x97F7F)
                    throw new IllegalReflectiveException();
               break label1;
          } catch (IllegalReflectiveException ex) {
               System.out.println(uwu);
          }
     }
}
```

#### Rappresentanza IR
```
 Original flow:       Obfuscated Flow:

 ┌─────────┐            ┌─────────┐
 │ Block A │            │ Block A │
 └────┬────┘            └────┬────┘
      │                      │
 ┌────▼────┐         ┌───────▼────────┐
 │ Block B │         │ Random If Stmt │
 └─────────┘         └───────┬────────┘
                             │
                   ┌─────┐◄──┴───►┌─────┐
                   │ Yes │        │ No  │
                   └─────┘        └──┬──┘
                                     │
                               ┌─────▼─────┐
                               │ Exception │
                               └───────────┘

                      ┌─────────────┐
                      │  Exception  │
                      │   Catcher   │
                      └──────┬──────┘
                             │
                        ┌────▼────┐
                        │ Block B │
                        └─────────┘
```
