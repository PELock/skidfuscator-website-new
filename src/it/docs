## Condizione Di Flusso

Questo trasfomero funge da primo scudo per un'analisi predicata opaca. Per evitare che l'analisi statica rilevi quale intero è un predicato opaco, usiamo questo numero intero specifico per aggiungere ulteriori condizioni a già esistenti se dichiarazioni. Non solo questo aggiunge ulteriore sicurezza al software, ma ostacola il processo di deoffuscazione e decompilazione di molti strumenti.

Rispetto al trasformatore Flow Exception, questa è una versione molto più semplificata che gestisce solo un caso di bordo.

## Configurazione

```js
exceptionReturn {
    enabled: false
    exempt: []
}
```

## Esempi

#### Unofuscato
```java
public static void main(String[] args) {
    int number = callNumber();

    if (number == 1) {
        System. ut.println("Ciao mondo");
    }
    /*[...]*/
}
/*[...]*/
```

#### Offuscato
```java
public static void main(String[] args) {
    /*[...]*/
    label1: {
        while (true) {
            if (n ^ 0x8AF8EF8F == 0xA88FFA) {
                break;
            }

            n = n ^ 0x28847D;
            int number = callNumber();

            label2: {
                if (number != 1)
                    break label1;

                if (n ^ 0xAA9F8FFD != 0x989F7AF)
                    break label2;

                System.out.println("Hello world");
                break label1;
            }

            throw new IllegalStateException();
        }
    }
    /*[...]*/
}
/*[...]*/
```