## Interruttore Di Flusso

Questo trasformatore specifico si rivolge esclusivamente alle tue istruzioni di commutazione per offuscare eventuali variabili, nascondendo efficacemente enum, costanti e bersagli di stringa. Ci√≤ avviene attraverso l'uso del predicato opaco e un meccanismo di hashing speciale per evitare qualsiasi evidente tecniche di reverse engineering.

## Configurazione

```js
flowSwitch {
    enabled: true
    exempt: []
}
```

## Esempi

#### Unofuscato
```java
public static void main(String[] args) {
    int number = callNumber();

    switch (number) {
        case 1: 
            System.out.println("Oh no!");
            break;
        case 2: 
            System.out.println("Hello world!");
            break
        default: 
            throw new IllegalStateException("Something went wrong!");
    }
    /*[...]*/
}
/*[...]*/
```

#### Offuscato
```java
public static void main(String[] args) {
    /*[...]*/
    int number = callNumber();

    switch (number ^ hash(n ^ 0x9932783)) {
        case 0x928EF8C: 
            System.out.println("Hello world!");
            break
        case 0x9873783: 
            System.out.println("Oh no!");
            break;
        default: 
            throw new IllegalStateException("Something went wrong!");
    }
    /*[...]*/
}
/*[...]*/
```
