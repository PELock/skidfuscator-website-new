const e=JSON.parse('{"key":"v-8daa1a0e","path":"/","title":"Home","lang":"en-US","frontmatter":{"home":true,"icon":"home","title":"Home","heroImage":"/logo.png","heroText":"Skidfuscator","tagline":"Powerful Java Obfuscation at the click of your hand","actions":[{"text":"Download ðŸ’¡","link":"/demo/","type":"primary"},{"text":"Docs","link":"/docs/"}],"features":[{"title":"Secure","icon":"bolt","details":"Protect your Java application with state-of-the-art obfuscation and encryption"},{"title":"Research-Backed","icon":"book","details":"Backed by academic, proven and peer-reviewed theoretical concepts."},{"title":"Rigorously Tested","icon":"laptop","details":"Backed by a 50+ complete unit testing suite. Odds are, Skidfuscator will work out-of-the-box for you."},{"title":"Fast Support","icon":"message","details":"Weekly bug-fixes with nightly releases. Skidfuscator has unbeatable support."},{"title":"String Encryption","icon":"lock","details":"Hide your Strings in your java application. Hide your endpoints and keep yourself secure."},{"title":"Flow Obfuscation","icon":"bug","details":"Prevent reverse-engineers from understanding your software."},{"title":"Renamer Obfuscation","icon":"arrow-down-a-z","details":"Hide the name of your classes and prevent hackers from comprehending your jar"},{"title":"Native Obfuscation (Soon)","icon":"code-merge","details":"Translate your Java code into native JNI, adding a layer of protection."}],"copyright":true,"footer":"Skidfuscator.dev | Copyright Â© 2023","description":"Skidfuscator is a proof of concept obfuscation tool designed to take advantage of SSA form to optimize and obfuscate Java bytecode code flow. This is done via intra-procedural p...","head":[["meta",{"property":"og:url","content":"https://skidfuscator.dev/"}],["meta",{"property":"og:site_name","content":"Skidfuscator"}],["meta",{"property":"og:title","content":"Home"}],["meta",{"property":"og:description","content":"Skidfuscator is a proof of concept obfuscation tool designed to take advantage of SSA form to optimize and obfuscate Java bytecode code flow. This is done via intra-procedural p..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:updated_time","content":"2023-01-03T00:23:48.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-01-03T00:23:48.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://skidfuscator.dev/zh/"}]]},"headers":[{"level":2,"title":"Third Generation Flow","slug":"third-generation-flow","link":"#third-generation-flow","children":[{"level":3,"title":"NEW Number Mutation","slug":"new-number-mutation","link":"#new-number-mutation","children":[]},{"level":3,"title":"Switch Mutation","slug":"switch-mutation","link":"#switch-mutation","children":[]},{"level":3,"title":"Fake exceptions","slug":"fake-exceptions","link":"#fake-exceptions","children":[]},{"level":3,"title":"Fake jumps","slug":"fake-jumps","link":"#fake-jumps","children":[]}]},{"level":2,"title":"Libraries used","slug":"libraries-used","link":"#libraries-used","children":[]},{"level":2,"title":"Inspired from","slug":"inspired-from","link":"#inspired-from","children":[]}],"git":{"createdTime":1672705428000,"updatedTime":1672705428000,"contributors":[{"name":"Thibaut Gautier","email":"shanyujuneja@gmail.com","commits":1}]},"readingTime":{"minutes":2.49,"words":748},"filePathRelative":"README.md","localizedDate":"January 3, 2023","autoDesc":true}');export{e as data};
